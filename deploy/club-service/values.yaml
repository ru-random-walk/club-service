# Default values for club-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

env:
  - name: AUTH_SERVICE_URL
    value: "http://random-walk.ru/auth"
  - name: GENERAL_LOGGING_LEVEL
    value: "INFO"
  - name: POSTGRES_URL
    value: "jdbc:postgresql://postgres-postgresql.default.svc.cluster.local:5432/random_walk_postgres"
  - name: FLYWAY_MIGRATION_LOCATIONS
    value: "classpath:db/migration"
  - name: LOGGING_SHOW_JPA_QUERIES
    value: "false"
  - name: LOGGING_SHOW_BINDING_JPA_VALUES_LEVEL
    value: "INFO"
#  - name: KAFKA_URL
#    value: "kafka-cluster.kafka.svc.cluster.local:9092"

secrets:
  - name: POSTGRES_USERNAME
    secret_key: POSTGRES_USERNAME
    secret_name: club-postgres-secret

  - name: POSTGRES_PASSWORD
    secret_key: POSTGRES_PASSWORD
    secret_name: club-postgres-secret

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 750m
    memory: 512Mi
  requests:
    cpu: 20m
    memory: 256Mi

livenessProbe:
  httpGet:
    path: /actuator/health
    port: 8080
  initialDelaySeconds: 45
  periodSeconds: 20
  failureThreshold: 5
  successThreshold: 1
  timeoutSeconds: 5
readinessProbe:
  httpGet:
    path: /actuator/health
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 20
  failureThreshold: 5
  successThreshold: 1
  timeoutSeconds: 5

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
