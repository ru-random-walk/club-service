type Club {
    id: ID!
    name: String!
    members: [Member!]!
    tests: [Test!]!
}

type Member {
    id: ID!
    role: MemberRole!
}

enum MemberRole {
    ADMIN
    USER
}

type Test {
    id: ID!
    type: TestType!
    data: TestData!
}

enum TestType {
    MEMBERS_CONFIRM
    FORM
}

union TestData = MembersConfirmTestData | FormTestData

type MembersConfirmTestData {
    requiredConfirmationNumber: Int!
}

type FormTestData {
    questions: [Question!]!
}

type Question {
    text: String!
    answerOptions: [String!]!
    answerType: AnswerType!
    correctOptionNumbers: [Int!]!
}

enum AnswerType {
    MULTIPLE
    SINGLE
}

type Answer {
    id: ID!
    test: Test!
    userId: ID!
    data: AnswerData!
    status: AnswerStatus!
}

enum AnswerStatus {
    CREATED
    SENT
    FAILED
    PASSED
}

union AnswerData = MembersConfirmAnswerData | FormAnswerData

type MembersConfirmAnswerData {
    actualConfirmationNumber: Int
}

type FormAnswerData {
    questionAnswers: [QuestionAnswer!]!
}

type QuestionAnswer {
    optionNumbers: [Int!]!
}